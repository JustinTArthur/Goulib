{"name":"Goulib","tagline":"My Python Library","body":"Goulib\r\n======\r\n\r\nMy Python library of useful code found and written for various projects\r\n\r\nauthor\r\n:   Philippe Guglielmetti <goulib@goulu.net>\r\n    ![ohloh](https://www.ohloh.net/accounts/543923/widgets/account_tiny.gif%0A%20:target:%20https://www.ohloh.net/accounts/543923?ref=Tiny)\r\n\r\ncopyright\r\n:   Copyright 2013 Philippe Guglielmetti\r\n\r\nlicense\r\n:   LGPL (see LICENSE.TXT)\r\n\r\n> target\r\n> :   <https://coveralls.io/r/goulu/Goulib>\r\n>\r\nModules\r\n-------\r\n\r\n-   datetime2 : additions to datetime\r\n-   itertools2 : additions to itertools\r\n-   math2 : additions to math standard library\r\n-   interval : operations on [x..y[ intervals\r\n-   piecewise: piecewise-defined functions\r\n-   polynomial: polynomials (branch of [Rick Muller's\r\n    reciepe](http://code.activestate.com/recipes/362193-manipulate-simple-polynomials-in-python/))\r\n-   motion : generation of motion laws\r\n-   table : Table class with Excel + CSV + HTML I/O, easy access to\r\n    columns, and much more\r\n-   workdays : WorkCalendar class with datetime operations on working\r\n    hours\r\n\r\n    merges and improves\r\n    [BusinessHours](http://pypi.python.org/pypi/BusinessHours/) and\r\n    [workdays](http://pypi.python.org/pypi/workdays/) packages\r\n-   colors : web (hex) colors dictionary and related functions\r\n-   geom : 2D geometry\r\n-   drawing : Vector graphics with I/O from .dxf and .svg formats\r\n-   graph : efficient Euclidian Graphs for NetworkX and related\r\n    algorithms\r\n-   optim : Optimization algorithms\r\n\r\n    Travelling Salesman Problem (TSP) hill climbing + simulated\r\n    annealing\r\n\r\n-   markup : simple HTML output (branch of\r\n    [markup](http://pypi.python.org/pypi/markup/) )\r\n\r\nResources\r\n---------\r\n\r\ninstallation\r\n:   \"pip install Goulib\"\r\n\r\ndistribution\r\n:   <https://pypi.python.org/pypi/Goulib>\r\n\r\ndocumentation\r\n:   <https://goulib.readthedocs.org/>\r\n\r\nsource\r\n:   <https://github.com/goulu/Goulib>\r\n\r\nchangelog\r\n:   <https://github.com/goulu/goulib/blob/master/CHANGES.rst>\r\n\r\ntests status\r\n:   ![travis](https://travis-ci.org/goulu/Goulib.png?branch=master%0A%20:target:%20https://travis-ci.org/goulu/Goulib)\r\n    ![coveralls](https://coveralls.io/repos/goulu/Goulib/badge.png)\r\n\r\nRequirements\r\n------------\r\n\r\nGoulib uses only standard Python libs, except: - graph needs\r\n[NetworkX](http://networkx.github.io/) and\r\n[RTree](http://toblerity.org/rtree/) + some algorithms need\r\n[SciPy](http://scipy.org/) and [NumPy](http://numpy.org/)\r\n\r\n-   drawings needs:\r\n    -   [dxfgrabber](http://pypi.python.org/pypi/dxfgrabber/) and\r\n        [dxfwrite](http://pypi.python.org/pypi/dxfwrite/)\r\n    -   PIL or [pillow](http://pypi.python.org/pypi/pillow/) for bitmap\r\n        output (Pillow is prefered over PIL because of Travis CI tests)\r\n-   \\~table.Table.read\\_xls needs\r\n    [xlrd](http://pypi.python.org/pypi/xlrd/)\r\n-   \\~table.Table.read\\_html needs\r\n    [lxml](http://pypi.python.org/pypi/lxml/)\r\n\r\nautomated [nose](http://pypi.python.org/pypi/nose/) tests generated by\r\n[pythoscope](http://pypi.python.org/pypi/pythoscope/)\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}